swagger: "2.0"
info:
  description: "The Wunderlist API provides REST-based storage and synchronization of a userâ€™s lists across multiple platforms and devices."
  version: "1"
  title: "Wunderlist API"
  termsOfService: "https://developer.wunderlist.com/documentation/terms/terms_of_use"
  contact:
    email: "avanderw@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "a.wunderlist.com"
basePath: "/api/v1"
tags:
- name: "list"
  description: "All tasks created in Wunderlist belong to a list."
  externalDocs:
    description: "Find out more"
    url: "https://developer.wunderlist.com/documentation/endpoints/list"
- name: "tasks"
  description: "Tasks are children of lists."
  externalDocs:
    description: "Find out more"
    url: "https://developer.wunderlist.com/documentation/endpoints/task"
schemes:
- "https"
- "http"
paths:
  /lists:
    get:
      tags:
       - "list"
      summary: "Get all Lists a user has permission to"
      operationId: "getLists"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/List"
    post:
      tags:
      - "list"
      summary: "Create a list"
      operationId: "createList"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      parameters:
      - in: "body"
        name: "title"
        description: "List title"
        required: true
        schema:
          type: "object"
          properties:
            title:
              type: "string"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/List"
  /lists/{listId}:
    parameters:
    - name: "listId"
      in: "path"
      description: "ID of list to return"
      required: true
      type: "integer"
      format: "int64"
    get:
      tags:
       - "list"
      summary: "Get a specific List"
      operationId: "getListById"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/List"
    post:
      tags:
      - "list"
      summary: "Update a list by overwriting properties"
      operationId: "updateList"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List title and revision"
        schema:
          type: "object"
          properties:
            revision:
              type: "integer"
              format: "int64"
            title:
              type: "string"
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/List"
    delete:
      tags:
      - "list"
      summary: "Delete a list permanently"
      description: ""
      operationId: "deleteList"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List revision"
        schema:
          type: "object"
          properties:
            revision:
              type: "integer"
              format: "int64"
      responses:
        204:
          description: "successful operation"
  /tasks:
    get:
      tags:
       - "tasks"
      summary: "Get Tasks for a List"
      operationId: "getTasksForList"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List Id"
        required: true
        schema:
          type: "object"
          properties:
            list_id:
              type: "integer"
              format: "int64"
            completed:
              type: "boolean"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Task"
    post:
      tags:
      - "tasks"
      summary: "Create a task"
      operationId: "createTask"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Task"
        schema:
          type: "object"
          properties:
            list_id:
              type: "integer"
              format: "int64"
            title:
              type: "string"
            assignee_id:
              type: "integer"
              format: "int64"
            completed:
              type: "boolean"
            recurrence_type:
              type: "string"
              enum:
              - "day"
              - "week"
              - "month"
              - "year"
            recurrence_count:
              type: "integer"
              format: "int64"
            due_date:
              type: "string"
              format: "date-time"
            starred:
              type: "boolean"
          required: ["list_id", "title"]
      responses:
        201:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Task"
  /tasks/{taskId}:
    parameters:
    - name: "taskId"
      in: "path"
      description: "ID of list to return"
      required: true
      type: "integer"
      format: "int64"
    get:
      tags:
       - "tasks"
      summary: "Get a specific task"
      operationId: "getTaskById"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Task"
    post:
      tags:
      - "tasks"
      summary: "Update a task by overwriting properties"
      operationId: "updateTask"
      consumes: 
      - "application/json"
      produces: 
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List title and revision"
        schema:
          type: "object"
          required: ["revision"]
          properties:
            revision:
              type: "integer"
              format: "int64"
            list_id:
              type: "integer"
              format: "int64"
            title:
              type: "string"
            assignee_id:
              type: "integer"
              format: "int64"
            completed:
              type: "boolean"
            recurrence_type:
              type: "string"
              enum:
              - "day"
              - "week"
              - "month"
              - "year"
            recurrence_count:
              type: "integer"
              format: "int64"
            due_date:
              type: "string"
              format: "date-time"
            starred:
              type: "boolean"
            remove:
              type: "array"
              items:
                type: string
                enum:
                - "due_date"
                - "assignee_id"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/Task"
    delete:
      tags:
      - "tasks"
      summary: "Delete a task"
      description: ""
      operationId: "deleteTask"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "List revision"
        schema:
          type: "object"
          properties:
            revision:
              type: "integer"
              format: "int64"
      responses:
        204:
          description: "successful operation"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "https://www.wunderlist.com/oauth/access_token"
    flow: "application"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  List:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      created_at:
        type: "string"
        format: "date-time"
      title:
        type: "string"
      list_type:
        type: "string"
        description: "description n/a"
        enum:
        - "list"
      type:
        type: "string"
        description: "description n/a"
        enum: 
        - "list"
      revision:
        type: "integer"
        format: "int64"
    xml:
      name: "List"
  Task:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      assignee_id:
        type: "integer"
        format: "int64"
      created_at:
        type: "string"
        format: "date-time"
      created_by_id:
        type: "integer"
        format: "int64"
      due_date:
        type: "string"
        format: "date-time"
      list_id:
        type: "integer"
        format: "int64"
      revision:
        type: "integer"
        format: "int64"
      starred:
        type: "boolean"
      title:
        type: "string"
      completed_at:
        type: "string"
        format: "date-time"
      completed_by_id:
        type: "integer"
        format: "int64"

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"